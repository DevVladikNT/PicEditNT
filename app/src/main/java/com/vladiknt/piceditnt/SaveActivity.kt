package com.vladiknt.piceditnt

import android.content.Intent
import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.os.Bundle
import android.provider.MediaStore
import android.view.View
import android.widget.ImageView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.android.gms.tasks.Task
import com.google.firebase.FirebaseApp
import com.google.firebase.appcheck.FirebaseAppCheck
import com.google.firebase.appcheck.safetynet.SafetyNetAppCheckProviderFactory
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.auth.FirebaseUser
import com.google.firebase.firestore.DocumentSnapshot
import com.google.firebase.firestore.FirebaseFirestore
import com.google.firebase.storage.FirebaseStorage
import com.vladiknt.piceditnt.filters.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.async
import kotlinx.coroutines.withContext
import java.io.ByteArrayInputStream
import java.io.ByteArrayOutputStream

class SaveActivity : AppCompatActivity() {
    /** Поле изображение */
    private var selectedImage = Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888)

    private var user: FirebaseUser? = null
    private var uid = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_save)

        val stream: ByteArray = intent.extras!!["image"] as ByteArray
        selectedImage = BitmapFactory.decodeByteArray(stream, 0, stream.size)

        user = FirebaseAuth.getInstance().currentUser
        uid = user!!.uid

        val imgPath1 = "photo/${uid}1.jpg"
        val imgPath2 = "photo/${uid}2.jpg"
        val imgPath3 = "photo/${uid}3.jpg"
        val imgPath4 = "photo/${uid}4.jpg"
        val imgPath5 = "photo/${uid}5.jpg"

        // Загрузка изображений в фоне
        val THREE_MEGABYTES = (3 * 1024 * 1024).toLong()
        FirebaseStorage.getInstance().reference.child(imgPath1).getBytes(THREE_MEGABYTES)
            .addOnSuccessListener { bytesPrm: ByteArray ->
                val bitmap = BitmapFactory.decodeByteArray(bytesPrm, 0, bytesPrm.size)
                findViewById<ImageView>(R.id.savePhoto1).setImageBitmap(bitmap)
            }
        FirebaseStorage.getInstance().reference.child(imgPath2).getBytes(THREE_MEGABYTES)
            .addOnSuccessListener { bytesPrm: ByteArray ->
                val bitmap = BitmapFactory.decodeByteArray(bytesPrm, 0, bytesPrm.size)
                findViewById<ImageView>(R.id.savePhoto2).setImageBitmap(bitmap)
            }
        FirebaseStorage.getInstance().reference.child(imgPath3).getBytes(THREE_MEGABYTES)
            .addOnSuccessListener { bytesPrm: ByteArray ->
                val bitmap = BitmapFactory.decodeByteArray(bytesPrm, 0, bytesPrm.size)
                findViewById<ImageView>(R.id.savePhoto3).setImageBitmap(bitmap)
            }
        FirebaseStorage.getInstance().reference.child(imgPath4).getBytes(THREE_MEGABYTES)
            .addOnSuccessListener { bytesPrm: ByteArray ->
                val bitmap = BitmapFactory.decodeByteArray(bytesPrm, 0, bytesPrm.size)
                findViewById<ImageView>(R.id.savePhoto4).setImageBitmap(bitmap)
            }
        FirebaseStorage.getInstance().reference.child(imgPath5).getBytes(THREE_MEGABYTES)
            .addOnSuccessListener { bytesPrm: ByteArray ->
                val bitmap = BitmapFactory.decodeByteArray(bytesPrm, 0, bytesPrm.size)
                findViewById<ImageView>(R.id.savePhoto5).setImageBitmap(bitmap)
            }
    }

    /**
     * Функция сохранения изображения в облаке.
     */
    fun saveInCloud(view: View?) {
        val path = when (view!!.id) {
            R.id.savePhoto1 -> "photo/${uid}1.jpg"
            R.id.savePhoto2 -> "photo/${uid}2.jpg"
            R.id.savePhoto3 -> "photo/${uid}3.jpg"
            R.id.savePhoto4 -> "photo/${uid}4.jpg"
            R.id.savePhoto5 -> "photo/${uid}5.jpg"
            else -> "error.jpg"
        }
        val stream: ByteArray = intent.extras!!["image"] as ByteArray
        FirebaseStorage.getInstance().reference.child(path).putBytes(stream)
            .addOnSuccessListener {
                (view as ImageView).setImageBitmap(selectedImage)
                Toast.makeText(this, "Image was successfully uploaded", Toast.LENGTH_SHORT).show()
            }
    }

    /**
     * Функция сохранения изображения в память устройства.
     */
    fun saveImage(view: View?) {
        MediaStore.Images.Media.insertImage(
            contentResolver,
            selectedImage,
            "${System.currentTimeMillis()}",
            "image generated by PicEditNT"
        )
        Toast.makeText(this, "Saved", Toast.LENGTH_SHORT).show()
    }
}